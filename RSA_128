# This program allows the user to visualize the random generation of a 128-bit RSA Scheme

import sympy as sp
from random import randint as rd

p = sp.randprime(pow(2, 63), pow(2, 64))
q = sp.randprime(pow(2, 63), pow(2, 64))
n = p * q
e = 65537
m = rd(pow(2, 63), pow(2, 64))
c = pow(m, e, n)

divs = sp.divisors(n)
p_1 = divs[1] - 1
q_1 = divs[2] - 1
phi = p_1 * q_1
x = sp.mod_inverse(e, phi)
d = pow(c, x, n)

print(f'p: {p}\nq: {q}\nn: {n}\nm: {m}\nc: {c}\nd: {d}')
